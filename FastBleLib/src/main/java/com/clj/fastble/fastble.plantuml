@startuml

title __FASTBLE's Class Diagram__\n

  namespace com.clj.fastble {
    class com.clj.fastble.BleManager {
        {static} + DEFAULT_SCAN_TIME : int
        {static} - DEFAULT_CONNECT_OVER_TIME : int
        {static} - DEFAULT_CONNECT_RETRY_COUNT : int
        {static} - DEFAULT_CONNECT_RETRY_INTERVAL : int
        {static} - DEFAULT_MAX_MTU : int
        {static} - DEFAULT_MAX_MULTIPLE_DEVICE : int
        {static} - DEFAULT_MTU : int
        {static} - DEFAULT_OPERATE_TIME : int
        {static} - DEFAULT_WRITE_DATA_SPLIT_COUNT : int
        - bluetoothAdapter : BluetoothAdapter
        - bluetoothManager : BluetoothManager
        - connectOverTime : long
        - context : Application
        - maxConnectCount : int
        - operateTimeout : int
        - reConnectCount : int
        - reConnectInterval : long
        - splitWriteNum : int
        + cancelScan()
        + clearCharacterCallback()
        + connect()
        + connect()
        + convertBleDevice()
        + convertBleDevice()
        + destroy()
        + disableBluetooth()
        + disconnect()
        + disconnectAllDevice()
        + enableBluetooth()
        + enableLog()
        + getAllConnectedDevice()
        + getBleBluetooth()
        + getBluetoothAdapter()
        + getBluetoothGatt()
        + getBluetoothGattCharacteristics()
        + getBluetoothGattServices()
        + getBluetoothManager()
        + getConnectOverTime()
        + getConnectState()
        + getContext()
        {static} + getInstance()
        + getMaxConnectCount()
        + getMultipleBluetoothController()
        + getOperateTimeout()
        + getReConnectCount()
        + getReConnectInterval()
        + getScanRuleConfig()
        + getScanSate()
        + getSplitWriteNum()
        + indicate()
        + indicate()
        + init()
        + initScanRule()
        + isBlueEnable()
        + isConnected()
        + isConnected()
        + isSupportBle()
        + notify()
        + notify()
        + read()
        + readRssi()
        + removeConnectGattCallback()
        + removeIndicateCallback()
        + removeMtuChangedCallback()
        + removeNotifyCallback()
        + removeReadCallback()
        + removeRssiCallback()
        + removeWriteCallback()
        + requestConnectionPriority()
        + scan()
        + scanAndConnect()
        + setConnectOverTime()
        + setMaxConnectCount()
        + setMtu()
        + setOperateTimeout()
        + setReConnectCount()
        + setReConnectCount()
        + setSplitWriteNum()
        + stopIndicate()
        + stopIndicate()
        + stopNotify()
        + stopNotify()
        + write()
        + write()
        + write()
    }
  }
  

  namespace com.clj.fastble {
    class com.clj.fastble.BleManager.BleManagerHolder {
        {static} - sBleManager : BleManager
    }
  }
  

  com.clj.fastble.BleManager o-- com.clj.fastble.scan.BleScanRuleConfig : bleScanRuleConfig
  com.clj.fastble.BleManager o-- com.clj.fastble.bluetooth.MultipleBluetoothController : multipleBluetoothController
  com.clj.fastble.BleManager +-down- com.clj.fastble.BleManager.BleManagerHolder


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
